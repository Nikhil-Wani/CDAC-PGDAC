pl sql block 

## Declare and initialize the varibale in pl sql block

Declare
v_name varchar2(30) :='Hello World';
Begin 
dbms_output.put_line(v_name);
End;
/

## Take value from table column and assign this  value to the varibale

Declare
v_ename varchar2(30);
begin
select ename into v_ename from emp where empno=7369;
dbms_output.put_line(v_ename);
end;
/

## Take two different column value from emp table and assign to the varibale

Declare
v_ename varchar2(30);
v_sal number;
Begin
select ename,sal into v_ename,v_sal from emp where empno=7369;
dbms_output.put_line(v_ename || ' ' || v_sal);
End;
/

## Access varibale in Exception block;
Declare
v_ename varchar2(30);
Begin
select ename into v_ename from emp where empno=100;
dbms_output.put_line('Begin Block' || v_ename);
Exception
when too_many_rows then
dbms_output.put_line(v_ename);
dbms_output.put_line('Exception has been occurred');
End;
/

## Anchor dataType  in Pl sql
 Declare
v_ename emp.ename%type; -- tablename.column_name%type
begin
select ename into v_ename from emp where empno=7369;
dbms_output.put_line(v_ename);
End;
/


Programming Construct of PL SQL Programming:-

For loop :-

Declare
v_ename emp.ename%type;
Begin
for a in 1 .. 5 loop -- (..) range operator
select * from emp where empno=7369; 
dbms_output.put_line(v_ename);
End loop;
End;
/




While loop :-

it needs initialization ,updation ,termination condition.

Declare
v_counter number;
Begin
v_counter :=0;
while v_counter <=5 loop
dbms_output.put_line('CDAC');
v_counter := v_counter+1;
End loop;
End;
/


Functions In PLSQL :-
Problem Statement: Calculate the area of circle

Create or Replace function func_areofcircle(radius in number)
return number
as
v_result number;
pi constant number := 3.14;
Begin
 v_result := pi*radius*radius;
--dbms_output.put_line('Area of Circle'||' '|| v_result);
return v_result;
End;
/

Call function through Select Statement 
[I] select functionname(argument) from dual
[II] Using Pl sql Block

Declare
v_result number;
Begin
v_result := func_areofcircle(34);
Dbms_output.put_line('Area of Circle'||' ' || v_result);
End;
/

Procedure : It is named block or subprogram used to implement logical data flow.
i) it can be called through exec command 
ii) procedure can be called through pl sql block


Example: Take empno from user and print employee name.
--DQL Statement
create or replace procedure proc_empname(param_empno emp.empno%type)
as
v_ename varchar2(30);
Begin
select ename into v_ename from emp where empno=param_empno;
dbms_output.put_line('EmployeeName'||' '|| v_ename);
End proc_empname;
/

Update the employeename using their empno through Procedure
--Dml Statement(Update)
create or replace procedure proc_empupdate(v_empno number)
as
Begin
update emp set ename='ABC' where empno=v_empno;
dbms_output.put_line(sql%rowcount||' '||'Employee Record Has been Updated');
End proc_empupdate;
/

sql%rowcount is a implicit cursor property which tells you how many records have been updated,deleted or inserted.

call procedure through pl sql block

Begin
proc_empname(7369);
End;
/






 